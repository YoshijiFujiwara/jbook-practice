{"ast":null,"code":"var _jsxFileName = \"/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/resizable.tsx\";\nimport React from \"react\";\nimport \"./resizable.css\";\nimport { ResizableBox } from \"react-resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  let resizableBoxProps;\n\n  if (direction === \"horizontal\") {\n    resizableBoxProps = {\n      minConstraints: [window.innerWidth * 0.2, Infinity],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: [\"e\"]\n    };\n  } else {\n    resizableBoxProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableBoxProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/resizable.tsx"],"names":["React","ResizableBox","Resizable","direction","children","resizableBoxProps","minConstraints","window","innerWidth","Infinity","maxConstraints","height","width","resizeHandles","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,YAAT,QAAgD,iBAAhD;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AACvE,MAAIC,iBAAJ;;AAEA,MAAIF,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,cAAc,EAAE,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,EAA0BC,QAA1B,CADE;AAElBC,MAAAA,cAAc,EAAE,CAACH,MAAM,CAACC,UAAP,GAAoB,IAArB,EAA2BC,QAA3B,CAFE;AAGlBE,MAAAA,MAAM,EAAEF,QAHU;AAIlBG,MAAAA,KAAK,EAAEL,MAAM,CAACC,UAAP,GAAoB,IAJT;AAKlBK,MAAAA,aAAa,EAAE,CAAC,GAAD;AALG,KAApB;AAOD,GARD,MAQO;AACLR,IAAAA,iBAAiB,GAAG;AAClBC,MAAAA,cAAc,EAAE,CAACG,QAAD,EAAW,EAAX,CADE;AAElBC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWF,MAAM,CAACO,WAAP,GAAqB,GAAhC,CAFE;AAGlBH,MAAAA,MAAM,EAAE,GAHU;AAIlBC,MAAAA,KAAK,EAAEH,QAJW;AAKlBI,MAAAA,aAAa,EAAE,CAAC,GAAD;AALG,KAApB;AAOD;;AAED,sBAAO,QAAC,YAAD,OAAkBR,iBAAlB;AAAA,cAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBD;;KAAMF,S;AAwBN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport \"./resizable.css\";\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableBoxProps: ResizableBoxProps;\n\n  if (direction === \"horizontal\") {\n    resizableBoxProps = {\n      minConstraints: [window.innerWidth * 0.2, Infinity],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: window.innerWidth * 0.75,\n      resizeHandles: [\"e\"],\n    };\n  } else {\n    resizableBoxProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n    };\n  }\n\n  return <ResizableBox {...resizableBoxProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}
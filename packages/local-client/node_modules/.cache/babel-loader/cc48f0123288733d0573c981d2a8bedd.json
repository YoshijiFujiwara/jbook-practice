{"ast":null,"code":"import localForage from \"localforage\";\nconst fileCache = localForage.createInstance({\n  name: \"filecache\"\n});\nexport const unpkgPathPlugin = inputCode => {\n  return {\n    name: \"unpkg-path-plugin\",\n\n    setup(build) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({\n        filter: /(^index\\.js$)/\n      }, () => {\n        return {\n          path: \"index.js\",\n          namespace: \"a\"\n        };\n      }); // Handle relative paths in a module\n\n      build.onResolve({\n        filter: /^\\.+\\//\n      }, args => {\n        return {\n          namespace: \"a\",\n          path: new URL(args.path, `https://unpkg.com${args.resolveDir}/`).href\n        };\n      }); // Handle main file of a module\n\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        console.log(\"onResolve\", args);\n        return {\n          namespace: \"a\",\n          path: `https://unpkg.com/${args.path}`\n        };\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/plugins/unpkg-path-plugin.ts"],"names":["localForage","fileCache","createInstance","name","unpkgPathPlugin","inputCode","setup","build","onResolve","filter","path","namespace","args","URL","resolveDir","href","console","log"],"mappings":"AAEA,OAAOA,WAAP,MAAwB,aAAxB;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACE,cAAZ,CAA2B;AAC3CC,EAAAA,IAAI,EAAE;AADqC,CAA3B,CAAlB;AAIA,OAAO,MAAMC,eAAe,GAAIC,SAAD,IAAuB;AACpD,SAAO;AACLF,IAAAA,IAAI,EAAE,mBADD;;AAELG,IAAAA,KAAK,CAACC,KAAD,EAA6B;AAChC;AACAA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAA6C,MAAM;AACjD,eAAO;AAAEC,UAAAA,IAAI,EAAE,UAAR;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAAP;AACD,OAFD,EAFgC,CAMhC;;AACAJ,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAuCG,IAAD,IAAe;AACnD,eAAO;AACLD,UAAAA,SAAS,EAAE,GADN;AAELD,UAAAA,IAAI,EAAE,IAAIG,GAAJ,CAAQD,IAAI,CAACF,IAAb,EAAoB,oBAAmBE,IAAI,CAACE,UAAW,GAAvD,EAA2DC;AAF5D,SAAP;AAID,OALD,EAPgC,CAchC;;AACAR,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOG,IAAP,IAAqB;AACrDI,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,IAAzB;AAEA,eAAO;AACLD,UAAAA,SAAS,EAAE,GADN;AAELD,UAAAA,IAAI,EAAG,qBAAoBE,IAAI,CAACF,IAAK;AAFhC,SAAP;AAID,OAPD;AAQD;;AAzBI,GAAP;AA2BD,CA5BM","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\nimport axios from \"axios\";\nimport localForage from \"localforage\";\n\nconst fileCache = localForage.createInstance({\n  name: \"filecache\",\n});\n\nexport const unpkgPathPlugin = (inputCode: string) => {\n  return {\n    name: \"unpkg-path-plugin\",\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\n        return { path: \"index.js\", namespace: \"a\" };\n      });\n\n      // Handle relative paths in a module\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\n        return {\n          namespace: \"a\",\n          path: new URL(args.path, `https://unpkg.com${args.resolveDir}/`).href,\n        };\n      });\n\n      // Handle main file of a module\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        console.log(\"onResolve\", args);\n\n        return {\n          namespace: \"a\",\n          path: `https://unpkg.com/${args.path}`,\n        };\n      });\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
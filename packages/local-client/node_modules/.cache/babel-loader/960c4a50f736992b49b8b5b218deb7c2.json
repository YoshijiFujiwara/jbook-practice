{"ast":null,"code":"var _jsxFileName = \"/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./resizable.css\";\nimport { ResizableBox } from \"react-resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  _s();\n\n  let resizableBoxProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    let timer;\n\n    const listener = () => {\n      setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n      }, 100);\n    };\n\n    window.addEventListener(\"resize\", listener);\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  if (direction === \"horizontal\") {\n    resizableBoxProps = {\n      className: \"resize-horizontal\",\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: innerWidth * 0.75,\n      resizeHandles: [\"e\"]\n    };\n  } else {\n    resizableBoxProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableBoxProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Resizable, \"pP7Dsp6ebnNv2hiUMMicRYhA838=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/resizable.tsx"],"names":["React","useEffect","useState","ResizableBox","Resizable","direction","children","resizableBoxProps","innerHeight","setInnerHeight","window","innerWidth","setInnerWidth","timer","listener","setTimeout","addEventListener","removeEventListener","className","minConstraints","Infinity","maxConstraints","height","width","resizeHandles"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAASC,YAAT,QAAgD,iBAAhD;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAAA;;AACvE,MAAIC,iBAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,WAAR,CAA9C;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,MAAM,CAACC,UAAR,CAA5C;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,KAAJ;;AACA,UAAMC,QAAQ,GAAG,MAAM;AACrBC,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,cAAc,CAACC,MAAM,CAACF,WAAR,CAAd;AACAI,QAAAA,aAAa,CAACF,MAAM,CAACC,UAAR,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KALD;;AAMAD,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCF,QAAlC;AAEA,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCH,QAArC;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAIT,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,iBAAiB,GAAG;AAClBW,MAAAA,SAAS,EAAE,mBADO;AAElBC,MAAAA,cAAc,EAAE,CAACR,UAAU,GAAG,GAAd,EAAmBS,QAAnB,CAFE;AAGlBC,MAAAA,cAAc,EAAE,CAACV,UAAU,GAAG,IAAd,EAAoBS,QAApB,CAHE;AAIlBE,MAAAA,MAAM,EAAEF,QAJU;AAKlBG,MAAAA,KAAK,EAAEZ,UAAU,GAAG,IALF;AAMlBa,MAAAA,aAAa,EAAE,CAAC,GAAD;AANG,KAApB;AAQD,GATD,MASO;AACLjB,IAAAA,iBAAiB,GAAG;AAClBY,MAAAA,cAAc,EAAE,CAACC,QAAD,EAAW,EAAX,CADE;AAElBC,MAAAA,cAAc,EAAE,CAACD,QAAD,EAAWZ,WAAW,GAAG,GAAzB,CAFE;AAGlBc,MAAAA,MAAM,EAAE,GAHU;AAIlBC,MAAAA,KAAK,EAAEH,QAJW;AAKlBI,MAAAA,aAAa,EAAE,CAAC,GAAD;AALG,KAApB;AAOD;;AAED,sBAAO,QAAC,YAAD,OAAkBjB,iBAAlB;AAAA,cAAsCD;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxCD;;GAAMF,S;;KAAAA,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./resizable.css\";\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableBoxProps: ResizableBoxProps;\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    let timer: any;\n    const listener = () => {\n      setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n      }, 100);\n    };\n    window.addEventListener(\"resize\", listener);\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  if (direction === \"horizontal\") {\n    resizableBoxProps = {\n      className: \"resize-horizontal\",\n      minConstraints: [innerWidth * 0.2, Infinity],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width: innerWidth * 0.75,\n      resizeHandles: [\"e\"],\n    };\n  } else {\n    resizableBoxProps = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: [\"s\"],\n    };\n  }\n\n  return <ResizableBox {...resizableBoxProps}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}
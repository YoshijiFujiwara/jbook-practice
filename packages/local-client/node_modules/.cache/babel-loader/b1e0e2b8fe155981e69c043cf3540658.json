{"ast":null,"code":"var _jsxFileName = \"/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/code-editor.tsx\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = ({\n  initialValue,\n  onChange\n}) => {\n  const onEditorDidMount = (getValue, monacoEditor) => {\n    var _monacoEditor$getMode;\n\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n    (_monacoEditor$getMode = monacoEditor.getModel()) === null || _monacoEditor$getMode === void 0 ? void 0 : _monacoEditor$getMode.updateOptions({\n      tabSize: 2\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MonacoEditor, {\n      editorDidMount: onEditorDidMount,\n      value: initialValue,\n      theme: \"dark\",\n      language: \"javascript\",\n      height: \"500px\",\n      options: {\n        wordWrap: \"on\",\n        minimap: {\n          enabled: false\n        },\n        showUnused: false,\n        folding: false,\n        lineNumbersMinChars: 3,\n        fontSize: 16,\n        scrollBeyondLastLine: false,\n        automaticLayout: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/code-editor.tsx"],"names":["MonacoEditor","CodeEditor","initialValue","onChange","onEditorDidMount","getValue","monacoEditor","onDidChangeModelContent","getModel","updateOptions","tabSize","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":";AAAA,OAAOA,YAAP,MAA6C,sBAA7C;;;AASA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAC5E,QAAMC,gBAAgC,GAAG,CAACC,QAAD,EAAWC,YAAX,KAA4B;AAAA;;AACnEA,IAAAA,YAAY,CAACC,uBAAb,CAAqC,MAAM;AACzCJ,MAAAA,QAAQ,CAACE,QAAQ,EAAT,CAAR;AACD,KAFD;AAIA,6BAAAC,YAAY,CAACE,QAAb,kFAAyBC,aAAzB,CAAuC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAvC;AACD,GAND;;AAQA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,cAAc,EAAEN,gBADlB;AAEE,MAAA,KAAK,EAAEF,YAFT;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,QAAQ,EAAC,YAJX;AAKE,MAAA,MAAM,EAAC,OALT;AAME,MAAA,OAAO,EAAE;AACPS,QAAAA,QAAQ,EAAE,IADH;AAEPC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAFF;AAGPC,QAAAA,UAAU,EAAE,KAHL;AAIPC,QAAAA,OAAO,EAAE,KAJF;AAKPC,QAAAA,mBAAmB,EAAE,CALd;AAMPC,QAAAA,QAAQ,EAAE,EANH;AAOPC,QAAAA,oBAAoB,EAAE,KAPf;AAQPC,QAAAA,eAAe,EAAE;AARV;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA9BD;;KAAMlB,U;AAgCN,eAAeA,UAAf","sourcesContent":["import MonacoEditor, { EditorDidMount } from \"@monaco-editor/react\";\nimport prettier from \"prettier\";\nimport parser from \"prettier/parser-babel\";\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ initialValue, onChange }) => {\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n  };\n\n  return (\n    <div>\n      <MonacoEditor\n        editorDidMount={onEditorDidMount}\n        value={initialValue}\n        theme=\"dark\"\n        language=\"javascript\"\n        height=\"500px\"\n        options={{\n          wordWrap: \"on\",\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 16,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}
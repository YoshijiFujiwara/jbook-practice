{"ast":null,"code":"var _jsxFileName = \"/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/code-editor.tsx\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = ({\n  initialValue,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(MonacoEditor, {\n    value: initialValue,\n    theme: \"dark\",\n    language: \"javascript\",\n    height: \"500px\",\n    options: {\n      wordWrap: \"on\",\n      minimap: {\n        enabled: false\n      },\n      showUnused: false,\n      folding: false,\n      lineNumbersMinChars: 3,\n      fontSize: 16,\n      scrollBeyondLastLine: false,\n      automaticLayout: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/code-editor.tsx"],"names":["MonacoEditor","React","CodeEditor","initialValue","onChange","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,sBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAOA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAC5E,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAED,YADT;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,QAAQ,EAAC,YAHX;AAIE,IAAA,MAAM,EAAC,OAJT;AAKE,IAAA,OAAO,EAAE;AACPE,MAAAA,QAAQ,EAAE,IADH;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFF;AAGPC,MAAAA,UAAU,EAAE,KAHL;AAIPC,MAAAA,OAAO,EAAE,KAJF;AAKPC,MAAAA,mBAAmB,EAAE,CALd;AAMPC,MAAAA,QAAQ,EAAE,EANH;AAOPC,MAAAA,oBAAoB,EAAE,KAPf;AAQPC,MAAAA,eAAe,EAAE;AARV;AALX;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnBD;;KAAMX,U;AAqBN,eAAeA,UAAf","sourcesContent":["import MonacoEditor from \"@monaco-editor/react\";\nimport React from \"react\";\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ initialValue, onChange }) => {\n  return (\n    <MonacoEditor\n      value={initialValue}\n      theme=\"dark\"\n      language=\"javascript\"\n      height=\"500px\"\n      options={{\n        wordWrap: \"on\",\n        minimap: { enabled: false },\n        showUnused: false,\n        folding: false,\n        lineNumbersMinChars: 3,\n        fontSize: 16,\n        scrollBeyondLastLine: false,\n        automaticLayout: true,\n      }}\n    />\n  );\n};\n\nexport default CodeEditor;\n"]},"metadata":{},"sourceType":"module"}
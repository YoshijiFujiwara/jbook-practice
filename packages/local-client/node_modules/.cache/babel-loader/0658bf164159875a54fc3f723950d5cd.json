{"ast":null,"code":"var _jsxFileName = \"/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/resizable.tsx\";\nimport React from \"react\";\nimport \"./resizable.css\";\nimport { ResizableBox } from \"react-resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = ({\n  direction,\n  children\n}) => {\n  let resizableProps;\n\n  if (direction === \"horizontal\") {\n    resizableProps = {};\n  } else {\n    resizableProps = {};\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, {\n    minConstraints: [Infinity, 24],\n    maxConstraints: [Infinity, window.innerHeight * 0.9],\n    height: 300,\n    width: Infinity,\n    resizeHandles: [\"s\"],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["/Users/yoshiji/webdev/udemy/react-typescript/jbook/src/components/resizable.tsx"],"names":["React","ResizableBox","Resizable","direction","children","resizableProps","Infinity","window","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,YAAT,QAAgD,iBAAhD;;;AAMA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AACvE,MAAIC,cAAJ;;AAEA,MAAIF,SAAS,KAAK,YAAlB,EAAgC;AAC9BE,IAAAA,cAAc,GAAG,EAAjB;AACD,GAFD,MAEO;AACLA,IAAAA,cAAc,GAAG,EAAjB;AACD;;AAED,sBACE,QAAC,YAAD;AACE,IAAA,cAAc,EAAE,CAACC,QAAD,EAAW,EAAX,CADlB;AAEE,IAAA,cAAc,EAAE,CAACA,QAAD,EAAWC,MAAM,CAACC,WAAP,GAAqB,GAAhC,CAFlB;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,KAAK,EAAEF,QAJT;AAKE,IAAA,aAAa,EAAE,CAAC,GAAD,CALjB;AAAA,cAOGF;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApBD;;KAAMF,S;AAsBN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport \"./resizable.css\";\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\n\ninterface ResizableProps {\n  direction: \"horizontal\" | \"vertical\";\n}\n\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\n  let resizableProps: ResizableBoxProps;\n\n  if (direction === \"horizontal\") {\n    resizableProps = {};\n  } else {\n    resizableProps = {};\n  }\n\n  return (\n    <ResizableBox\n      minConstraints={[Infinity, 24]}\n      maxConstraints={[Infinity, window.innerHeight * 0.9]}\n      height={300}\n      width={Infinity}\n      resizeHandles={[\"s\"]}\n    >\n      {children}\n    </ResizableBox>\n  );\n};\n\nexport default Resizable;\n"]},"metadata":{},"sourceType":"module"}